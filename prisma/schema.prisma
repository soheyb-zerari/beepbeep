// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id        String   @id @default(cuid())
  name      String
  address   String
  isOpen    Boolean
  phone     String
  ownerId   String   @unique
  owner     User     @relation(fields: [ownerId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  meal      Meal[]
  rate      Float    @default(0)
}

model User {
  id         String      @id @default(cuid())
  username   String
  phone      String      @unique
  password   String
  role       Role        @default(CLIENT)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  restaurant Restaurant?
}

enum Role {
  DISPATCHER
  CLIENT
  DRIVER
  RESTAURANT
}

model Meal {
  id           String     @id @default(cuid())
  name         String     @unique
  price        Float
  offerPrice   Float
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  imageUrl     String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  categoryId   String
  category     Category   @relation(fields: [categoryId], references: [id])
  variant      Variant[]
}

model Category {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  meal      Meal[]
}

model Variant {
  id        String   @id @default(cuid())
  name      String
  price     Float
  meal      Meal     @relation(fields: [mealId], references: [id])
  mealId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
